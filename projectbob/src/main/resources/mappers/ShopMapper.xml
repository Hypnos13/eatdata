<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.projectbob.mapper.ShopMapper" >
	 <resultMap id="menuResultMap" type="com.projectbob.domain.Menu">
	 	<id property="mId" column="m_id"/>
    <result property="sId" column="s_id"/>
    <result property="category" column="category"/>
    <result property="name" column="name"/>
    <result property="price" column="price"/>
    <result property="mInfo" column="m_info"/>
    <result property="mPictureUrl" column="m_picture_url"/>
    <result property="liked" column="liked"/>
    <result property="regDate" column="reg_date"/>
    <result property="modiDate" column="modi_date"/>
    </resultMap>

   <resultMap id="menuOptionResultMap" type="com.projectbob.domain.MenuOption">
       <id property="moId" column="mo_id"/>
       <result property="mId" column="m_id"/>
       <result property="mOption" column="m_option"/>
       <result property="content" column="content"/>
       <result property="price" column="price"/>
       <result property="regDate" column="reg_date"/>
       <result property="modiDate" column="modi_date"/>
       <result property="status" column="status"/>
   </resultMap>

	 <!-- ===== Menu ===== -->
   <insert id="insertMenu" parameterType="Menu" useGeneratedKeys="true" keyProperty="mId">
      INSERT INTO menu(
      s_id, category, name, price, m_info, m_picture_url, 
      reg_date, modi_date, status,
      serving_size, calories, carbs, protein, fat, sugar, sodium) 
      VALUES(#{sId}, #{category}, #{name}, #{price}, #{mInfo}, #{mPictureUrl}, 
      SYSDATE(), SYSDATE(), '판매중', 
      #{servingSize}, #{calories}, #{carbs}, #{protein}, #{fat}, #{sugar}, #{sodium})
   </insert>
   
   <update id="updateMenuStatus">
    UPDATE menu
    SET status = #{status}, modi_date = SYSDATE()
    WHERE m_id = #{mId}
    </update>


	<select id="getAllMenus" resultMap="menuResultMap">
       SELECT
           m_id, s_id, category, name, price, m_info, m_picture_url, liked, reg_date, modi_date, status 
       FROM menu
       ORDER BY m_id DESC
   </select>

	<select id="getMenuById" parameterType="int" resultMap="menuResultMap">
        SELECT m_id, s_id, category, name, price, m_info,
               m_picture_url, liked, reg_date, modi_date, status 
        FROM menu WHERE m_id = #{mId}
    </select>

	<update id="updateMenu" parameterType="Menu">
        UPDATE menu
        SET category = #{category}, name = #{name}, price = #{price}, m_info = #{mInfo},
            m_picture_url = #{mPictureUrl}, modi_date = SYSDATE()
        WHERE m_id = #{mId}
    </update>

	<delete id="deleteMenu" parameterType="int">
        DELETE FROM menu WHERE m_id = #{mId}
    </delete>
    
    
	<!-- ===== Menu Option ===== -->
	<insert id="insertMenuOption" parameterType="MenuOption">
        INSERT INTO menu_option(m_id, m_option, content, price, reg_date, status)
        VALUES(#{mId}, #{mOption}, #{content}, #{price}, SYSDATE(), #{status})
    </insert>

	<select id="getMenuOptionsByMenuId" parameterType="int" resultMap="menuOptionResultMap">
        SELECT mo_id, m_id, m_option, content, price,
               reg_date, modi_date, status
        FROM menu_option
        WHERE m_id = #{mId} AND status = 'active'
        ORDER BY mo_id
    </select>

	<update id="updateMenuOption" parameterType="MenuOption">
        UPDATE menu_option
        SET m_option = #{mOption}, content = #{content}, price = #{price},
            modi_date = SYSDATE(), status = #{status}
        WHERE mo_id = #{moId}
    </update>

	<update id="deleteMenuOption" parameterType="int">
        UPDATE menu_option SET status = 'deleted', modi_date = SYSDATE() WHERE mo_id = #{moId}
    </update>

	<delete id="deleteMenuOptionsByMenuId" parameterType="int">
        DELETE FROM menu_option WHERE m_id = #{mId}
  </delete>


  <select id="getMenusByShopId" resultType="com.projectbob.domain.Menu"> SELECT 
        m_id, s_id, category, name, price, m_info, m_picture_url, liked, reg_date, modi_date, status
    FROM menu
    WHERE s_id = #{sId}
    <if test="category != null and category != ''">
        AND category = #{category}
    </if>
    ORDER BY category, name
   </select>
   
   <select id="getMenuCategoriesByShopId" parameterType="int" resultType="string">
    SELECT DISTINCT category 
    FROM menu 
    WHERE s_id = #{sId} 
    ORDER BY category
   </select>
    

	<!-- ===== Shop ===== -->
	<insert id="insertShop" parameterType="com.projectbob.domain.Shop" useGeneratedKeys="true" keyProperty="sId">
        INSERT INTO shop(id, name, phone, zipcode, address1, address2, owner, s_number, s_pictureURL, s_licenseURL, reg_date)
        VALUES(#{id}, #{name}, #{phone}, #{zipcode}, #{address1}, #{address2}, #{owner}, #{sNumber}, #{sPictureUrl}, #{sLicenseUrl}, SYSDATE())
    </insert>
    
	<!-- 관리 화면 첫 페이지 용 전체 가게 리스트 -->
	<select id="shopList"
          resultType="com.projectbob.domain.Shop">
	    SELECT
	      s_id,
	      name,
	      status,
	      owner,
	      phone,
	      zipcode,
	      address1,
	      address2,
	      s_number,
	      s_pictureURL AS s_picture_url,
	      s_licenseURL AS s_license_url,
	      rating
	    FROM shop
	  </select>
	
	<!-- 가게정보 불러오기 -->

	<select id="findByOwnerId" resultType="com.projectbob.domain.Shop">
	    SELECT *
	    FROM shop
	    WHERE id = #{ownerId}
	</select>
	
	<!-- 가게 유무 확인 후 보여주기 -->
	<select id="findShopListByOwnerId"
          parameterType="string"
          resultMap="shopResultMap">
	    SELECT
	      s_id,
	      name,
	      status,
	      owner,
	      phone,
	      zipcode,
	      address1,
	      address2,
	      s_number,
	      s_pictureURL AS s_picture_url,
	      s_licenseURL AS s_license_url,
	      rating
	    FROM shop
	    WHERE id = #{ownerId}
	    ORDER BY reg_date DESC
	  </select>
   
	<!-- 다수 가게에서 현재 선택한 가게고정 -->
	<select id="findByShopIdAndOwnerId" resultType="com.projectbob.domain.Shop">
	  SELECT
	    s_id,
	    name,
	    phone,
	    zipcode,
	    address1,
	    address2,
	    owner,
	    s_number,
	    s_pictureURL,
	    s_licenseURL,
	    category,
	    info,
	    notice,
	    s_info,
	    status,
	    reg_date,
	    modi_date
	  FROM shop
	  WHERE s_id = #{sId}
	    AND id = #{ownerId}
	</select>

	<!-- 메뉴 컨트롤러에 shop 모델 추가 -->
	<select id="findBySId" resultType="com.projectbob.domain.Shop">
	    SELECT * FROM shop WHERE s_id = #{sId}
	</select>
	
	<!-- 기본정보 수정 -->
	<update id="updateShopBasicInfo" parameterType="com.projectbob.domain.Shop">
        UPDATE shop
        SET name     = #{name},
            phone    = #{phone},
            zipcode  = #{zipcode},
            address1 = #{address1},
            address2 = #{address2},
            owner    = #{owner},
            s_number = #{sNumber},
            category = #{category},
            info     = #{info},
            s_pictureURL  = #{sPictureUrl},
	        s_licenseURL  = #{sLicenseUrl},
            modi_date= #{modiDate}
        WHERE s_id = #{sId}
    </update>
	
	<!-- 가게 상태 업데이트 -->
	<update id="updateStatus">
	    UPDATE shop
	    SET status = #{status}
	    WHERE s_id = #{sId}
	</update>
	
	<!-- 영업시간 업데이트 -->
	<update id="updateShopOpenTime" parameterType="com.projectbob.domain.Shop">
	    UPDATE shop
	    SET op_time = #{opTime},
	        off_day = #{offDay}
	    WHERE s_id = #{sId}
	</update>
	
	<!-- 사장님 공지사항/가게정보 업데이트 -->
	<update id="updateShopNotice" parameterType="map">
	  UPDATE shop
	  SET notice    = #{notice},
	      modi_date = SYSDATE()
	  WHERE s_id = #{sId}
	</update>
	
	<update id="updateShopInfo" parameterType="map">
	  UPDATE shop
	  SET s_info    = #{sInfo},
	      modi_date = SYSDATE()
	  WHERE s_id = #{sId}
	</update>
	
	<!-- 리뷰관리 -->
	<select id="findReviewsByShopId" resultType="com.projectbob.domain.Review">
	    SELECT
	        r.r_no AS rNo,
	        r.id,
	        r.s_id AS sId,
	        r.m_id AS mId,
	        r.content,
	        r.rating,
	        r.r_picture AS rPicture,
	        r.liked,
	        r.reg_date AS regDate,
	        r.status,
	        m.name AS menuName  <!-- 조인 추가! -->
	    FROM review r
	    LEFT JOIN menu m ON r.m_id = m.m_id
	    WHERE r.s_id = #{sId}
	      AND r.status = '일반'
	    ORDER BY r.reg_date DESC
	</select>
	
	<!-- 리뷰넘버 체크 -->
  <select id="findRepliesByReviewNo" resultType="com.projectbob.domain.ReviewReply">
    SELECT rr_no        AS rrNo,
           r_no         AS rNo,
           s_id         AS sId,
           id,
           content,
           reg_date     AS regDate,
           status
      FROM review_reply
     WHERE r_no = #{rNo}
       AND status = 'active'
     ORDER BY reg_date ASC
  </select>

	<!-- 대댓글 관리 -->
  <insert id="insertReviewReply" parameterType="com.projectbob.domain.ReviewReply">
    INSERT INTO review_reply(r_no, s_id, id, content, reg_date, status)
    VALUES(#{rNo}, #{sId}, #{id}, #{content}, SYSDATE(), 'active')
  </insert>
  
  <!-- 리뷰 평점 -->
  <update id="updateShopRatingBySId" parameterType="int">
  UPDATE shop
  SET rating = (
      SELECT IFNULL(ROUND(AVG(rating), 1), 0)
      FROM review
      WHERE s_id = #{sId} AND status = '일반'
  )
  WHERE s_id = #{sId}
</update>

<!-- 리뷰 등록 -->
<insert id="insertReview" parameterType="com.projectbob.domain.Review">
    INSERT INTO review
        (id, s_id, m_id, content, rating, r_picture, liked, status, reg_date, modi_date)
    VALUES
        (#{id}, #{sId}, #{mId}, #{content}, #{rating}, #{rPicture}, #{liked}, #{status}, NOW(), NOW())
</insert>

<!-- 리뷰 수정 -->
<update id="updateReview" parameterType="com.projectbob.domain.Review">
    UPDATE review
    SET content = #{content},
        rating = #{rating},
        r_picture = #{rPicture},
        modi_date = NOW()
    WHERE r_no = #{rNo}
</update>

<!-- 리뷰 삭제 -->
<delete id="deleteReview" parameterType="int">
    DELETE FROM review WHERE r_no = #{rNo}
</delete>

<resultMap id="shopResultMap" type="com.projectbob.domain.Shop">
    <id property="sId" column="s_id"/>
    <result property="name" column="name"/>
    <result property="status" column="status"/>
    <result property="owner" column="owner"/>
    <result property="phone" column="phone"/>
    <result property="zipcode" column="zipcode"/>
    <result property="address1" column="address1"/>
    <result property="address2" column="address2"/>
    <result property="sNumber" column="s_number"/>
    <result property="sPictureUrl" column="s_picture_url"/>
    <result property="sLicenseUrl" column="s_license_url"/>
    <result property="rating" column="rating"/>
</resultMap>

</mapper>	
