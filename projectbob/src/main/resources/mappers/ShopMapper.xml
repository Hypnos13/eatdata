<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.projectbob.mapper.ShopMapper" >

<!-- 웹소켓 주문번호로 유저 아이디 가져오기 -->
<select id="getUserIdByOrderNo" parameterType="int" resultType="string">
    SELECT id FROM orders WHERE o_no = #{oNo}
</select>

	 <resultMap id="menuResultMap" type="com.projectbob.domain.Menu">
	 	<id property="mId" column="m_id"/>
    <result property="sId" column="s_id"/>
    <result property="category" column="category"/>
    <result property="name" column="name"/>
    <result property="price" column="price"/>
    <result property="mInfo" column="m_info"/>
    <result property="mPictureUrl" column="m_picture_url"/>
    <result property="liked" column="liked"/>
    <result property="regDate" column="reg_date"/>
    <result property="modiDate" column="modi_date"/>
    </resultMap>

   <resultMap id="menuOptionResultMap" type="com.projectbob.domain.MenuOption">
       <id property="moId" column="mo_id"/>
       <result property="mId" column="m_id"/>
       <result property="mOption" column="m_option"/>
       <result property="content" column="content"/>
       <result property="price" column="price"/>
       <result property="regDate" column="reg_date"/>
       <result property="modiDate" column="modi_date"/>
       <result property="status" column="status"/>
   </resultMap>
   <resultMap id="ordersResultMap" type="com.projectbob.domain.Orders">
    <id property="oNo" column="o_no" />
    <result property="sId" column="s_id" />
    <result property="id" column="id" />
    <result property="totalPrice" column="total_price" />
    <result property="payment" column="payment" />
    <result property="oAddress" column="o_address" />
    <result property="request" column="request" />
    <result property="regDate" column="reg_date" />
    <result property="modiDate" column="modi_date" />
    <result property="status" column="status" />
    <result property="quantity" column="quantity" />
    <result property="menus" column="menus" />
    <result property="paymentUid" column="payment_uid" />
    <result property="clientPhone" column="client_phone" />
    </resultMap>
    
    <select id="countOrdersByStatusAndShop" resultType="int">
    	SELECT COUNT(*) FROM orders WHERE status = #{status} AND s_id = #{sId}
    </select>
   
   <!-- ===== Menu ===== -->
   <insert id="insertMenu" parameterType="Menu" useGeneratedKeys="true" keyProperty="mId">
      INSERT INTO menu(
      s_id, category, name, price, m_info, m_picture_url, 
      reg_date, modi_date, status,
      serving_size, calories, carbs, protein, fat, sfa, sugar, sodium) 
      VALUES(#{sId}, #{category}, #{name}, #{price}, #{mInfo}, #{mPictureUrl}, 
      SYSDATE(), SYSDATE(), '판매중', 
      #{servingSize}, #{calories}, #{carbs}, #{protein}, #{fat}, #{sfa}, #{sugar}, #{sodium})
   </insert>
   
   <update id="updateMenuStatus">
    UPDATE menu
    SET status = #{status}, modi_date = SYSDATE()
    WHERE m_id = #{mId}
    </update>


	<select id="getAllMenus" resultMap="menuResultMap">
       SELECT
           m_id, s_id, category, name, price, m_info, m_picture_url, liked, reg_date, modi_date, status 
       FROM menu
       ORDER BY m_id DESC
   </select>

	<select id="getMenuById" parameterType="int" resultMap="menuResultMap">
        SELECT m_id, s_id, category, name, price, m_info,
               m_picture_url, liked, reg_date, modi_date, status 
        FROM menu WHERE m_id = #{mId}
    </select>

    <update id="updateMenu" parameterType="Menu">
    UPDATE menu
    SET 
        category = #{category}, 
        name = #{name}, 
        price = #{price}, 
        m_info = #{mInfo},
        m_picture_url = #{mPictureUrl}, 
        modi_date = SYSDATE(),
        serving_size = #{servingSize},
        calories = #{calories},
        carbs = #{carbs},
        protein = #{protein},
        fat = #{fat},
        sfa = #{sfa},
        sugar = #{sugar},
        sodium = #{sodium}
    WHERE m_id = #{mId}
    </update>

	<delete id="deleteMenu" parameterType="int">
        DELETE FROM menu WHERE m_id = #{mId}
    </delete>
    
    
	<!-- ===== Menu Option ===== -->
	<insert id="insertMenuOption" parameterType="MenuOption">
        INSERT INTO menu_option(m_id, m_option, content, price, reg_date, status)
        VALUES(#{mId}, #{mOption}, #{content}, #{price}, SYSDATE(), #{status})
    </insert>

	<select id="getMenuOptionsByMenuId" parameterType="int" resultMap="menuOptionResultMap">
        SELECT mo_id, m_id, m_option, content, price,
               reg_date, modi_date, status
        FROM menu_option
        WHERE m_id = #{mId} AND status = 'active'
        ORDER BY mo_id
    </select>

	<update id="updateMenuOption" parameterType="MenuOption">
        UPDATE menu_option
        SET m_option = #{mOption}, content = #{content}, price = #{price},
            modi_date = SYSDATE(), status = #{status}
        WHERE mo_id = #{moId}
    </update>

	<update id="deleteMenuOption" parameterType="int">
        UPDATE menu_option SET status = 'deleted', modi_date = SYSDATE() WHERE mo_id = #{moId}
    </update>

	<delete id="deleteMenuOptionsByMenuId" parameterType="int">
        DELETE FROM menu_option WHERE m_id = #{mId}
  </delete>


  <select id="getMenusByShopId" resultType="com.projectbob.domain.Menu"> SELECT 
        m_id, s_id, category, name, price, m_info, m_picture_url, liked, reg_date, modi_date, status
    FROM menu
    WHERE s_id = #{sId}
    <if test="category != null and category != ''">
        AND category = #{category}
    </if>
    ORDER BY category, name
   </select>
   
   <select id="getMenuCategoriesByShopId" parameterType="int" resultType="string">
    SELECT DISTINCT category 
    FROM menu 
    WHERE s_id = #{sId} 
    ORDER BY category
   </select>
    

	<!-- ===== Shop ===== -->
	
	<select id="selectOrdersByMultipleStatusesAndShop" resultMap="ordersResultMap">
  SELECT * FROM orders
  WHERE s_id = #{sId} AND status IN
  <foreach item="statusItem" collection="statuses" open="(" separator="," close=")">
    #{statusItem}
  </foreach>
  ORDER BY reg_date DESC
  </select>
	
	<insert id="insertShop" parameterType="com.projectbob.domain.Shop" useGeneratedKeys="true" keyProperty="sId">
        INSERT INTO shop(id, name, phone, zipcode, address1, address2, owner, s_number, s_pictureURL, s_licenseURL, reg_date)
        VALUES(#{id}, #{name}, #{phone}, #{zipcode}, #{address1}, #{address2}, #{owner}, #{sNumber}, #{sPictureUrl}, #{sLicenseUrl}, SYSDATE())
    </insert>
    
	<!-- 관리 화면 첫 페이지 용 전체 가게 리스트 -->
	<select id="shopList"
          resultType="com.projectbob.domain.Shop">
	    SELECT
	      s_id,
	      name,
	      status,
	      owner,
	      phone,
	      zipcode,
	      address1,
	      address2,
	      s_number,
	      s_pictureURL AS s_picture_url,
	      s_licenseURL AS s_license_url,
	      rating
	    FROM shop
	  </select>
	
	<!-- 가게정보 불러오기 -->
	<select id="findByOwnerId"
        resultType="com.projectbob.domain.Shop"
        parameterType="string">
	  SELECT
	    s_id, name, phone, zipcode, address1, address2, owner,
	    s_number AS sNumber,
	    s_pictureURL AS sPictureUrl,
	    s_licenseURL AS sLicenseUrl,
	    op_time    AS opTime,
	    off_day    AS offDay,
	    rating,
	    info,
	    s_info     AS sInfo,
	    status,
	    reg_date   AS regDate,
	    modi_date  AS modiDate
	  FROM shop
	  WHERE id = #{ownerId}
	</select>
	
	<!-- 가게 유무 확인 후 보여주기 -->
	<select id="findShopListByOwnerId"
          parameterType="string"
          resultMap="shopResultMap">
	    SELECT
	      s_id,
	      name,
	      status,
	      owner,
	      phone,
	      zipcode,
	      address1,
	      address2,
	      s_number,
	      s_pictureURL AS s_picture_url,
	      s_licenseURL AS s_license_url,
	      rating
	    FROM shop
	    WHERE id = #{ownerId}
	    ORDER BY reg_date DESC
	  </select>
   
	<!-- 다수 가게에서 현재 선택한 가게고정 -->
	<select id="findByShopIdAndOwnerId" resultMap="shopResultMap">
	  SELECT
	    s_id,
	    name,
	    phone,
	    zipcode,
	    address1,
	    address2,
	    owner,
	    s_number,
	    s_pictureURL,
	    s_licenseURL,
	    category,
	    info,
	    notice,
	    s_info,
	    status,
	    op_time,
	    off_day, 
	    reg_date,
	    modi_date
	  FROM shop
	  WHERE s_id = #{sId}
	    AND id = #{ownerId}
	</select>

	<!-- 메뉴 컨트롤러에 shop 모델 추가 -->
	<select id="findBySId" resultType="com.projectbob.domain.Shop">
	    SELECT * FROM shop WHERE s_id = #{sId}
	</select>
	
	<!-- 기본정보 수정 -->
	<update id="updateShopBasicInfo" parameterType="com.projectbob.domain.Shop">
        UPDATE shop
        SET name     = #{name},
            phone    = #{phone},
            zipcode  = #{zipcode},
            address1 = #{address1},
            address2 = #{address2},
            owner    = #{owner},
            s_number = #{sNumber},
            category = #{category},
            info     = #{info},
            s_pictureURL  = #{sPictureUrl},
	        s_licenseURL  = #{sLicenseUrl},
            modi_date= #{modiDate}
        WHERE s_id = #{sId}
    </update>
	
	<!-- 영업시간 업데이트 -->
	<update id="updateShopOpenTime" parameterType="com.projectbob.domain.Shop">
	    UPDATE shop
	    SET op_time = #{opTime},
	        off_day = #{offDay}
	    WHERE s_id = #{sId}
	</update>
	
	<!-- 사장님 공지사항/가게정보 업데이트 -->
	<update id="updateShopNotice" parameterType="map">
	  UPDATE shop
	  SET notice    = #{notice},
	      modi_date = SYSDATE()
	  WHERE s_id = #{sId}
	</update>
	
	<update id="updateShopInfo" parameterType="map">
	  UPDATE shop
	  SET s_info    = #{sInfo},
	      modi_date = SYSDATE()
	  WHERE s_id = #{sId}
	</update>
	
	<!-- 리뷰관리 -->
	<select id="findReviewsByShopId" resultType="com.projectbob.domain.Review">
	    SELECT
	        r.r_no AS rNo,
	        r.id,
	        r.s_id AS sId,
	        r.m_id AS mId,
	        r.content,
	        r.rating,
	        r.r_picture AS rPicture,
	        r.liked,
	        r.reg_date AS regDate,
	        r.status,
	        m.name AS menuName  <!-- 조인 추가! -->
	    FROM review r
	    LEFT JOIN menu m ON r.m_id = m.m_id
	    WHERE r.s_id = #{sId}
	      AND r.status = '일반'
	    ORDER BY r.reg_date DESC
	</select>
	
	<!-- 리뷰넘버 체크 -->
  <select id="findRepliesByReviewNo" resultType="com.projectbob.domain.ReviewReply">
    SELECT rr_no        AS rrNo,
           r_no         AS rNo,
           s_id         AS sId,
           id,
           content,
           reg_date     AS regDate,
           status
      FROM review_reply
     WHERE r_no = #{rNo}
       AND status = 'active'
     ORDER BY reg_date ASC
  </select>

  
  <!-- 리뷰 평점 -->
  <update id="updateShopRatingBySId" parameterType="int">
  UPDATE shop
  SET rating = (
      SELECT IFNULL(ROUND(AVG(rating), 1), 0)
      FROM review
      WHERE s_id = #{sId} AND status = '일반'
  )
  WHERE s_id = #{sId}
</update>

<!-- 리뷰 등록 -->
<insert id="insertReview" parameterType="com.projectbob.domain.Review">
    INSERT INTO review
        (id, s_id, m_id, content, rating, r_picture, liked, status, reg_date, modi_date)
    VALUES
        (#{id}, #{sId}, #{mId}, #{content}, #{rating}, #{rPicture}, #{liked}, #{status}, NOW(), NOW())
</insert>

<!-- 리뷰 수정 -->
<update id="updateReview" parameterType="com.projectbob.domain.Review">
    UPDATE review
    SET content = #{content},
        rating = #{rating},
        r_picture = #{rPicture},
        modi_date = NOW()
    WHERE r_no = #{rNo}
</update>

<!-- 리뷰 삭제 -->
<delete id="deleteReview" parameterType="int">
    DELETE FROM review WHERE r_no = #{rNo}
</delete>

<!-- 답글 작성 -->
<insert id="insertReviewReply" parameterType="com.projectbob.domain.ReviewReply">
	INSERT INTO review_reply(r_no, s_id, id, content, reg_date, status)
	VALUES(#{rNo}, #{sId}, #{id}, #{content}, SYSDATE(), 'active')
</insert>

<!-- 답글 내용 수정 -->
<update id="updateReviewReply" parameterType="com.projectbob.domain.ReviewReply">
  UPDATE review_reply
  SET content   = #{content},
      modi_date = NOW()
  WHERE rr_no    = #{rrNo}
    AND status   = 'active'
</update>

<!-- 답글 삭제 -->
<delete id="deleteReviewReply" parameterType="int">
  DELETE FROM review_reply
  WHERE rr_no = #{rrNo}
</delete>

<resultMap id="shopResultMap" type="com.projectbob.domain.Shop">
    <id property="sId" column="s_id"/>
    <result property="name" column="name"/>
    <result property="status" column="status"/>
    <result property="owner" column="owner"/>
    <result property="phone" column="phone"/>
    <result property="zipcode" column="zipcode"/>
    <result property="address1" column="address1"/>
    <result property="address2" column="address2"/>
    <result property="sNumber" column="s_number"/>
    <result property="sPictureUrl" column="s_picture_url"/>
    <result property="sLicenseUrl" column="s_license_url"/>
    <result property="opTime" column="op_time"/>
    <result property="offDay" column="off_day"/>
    <result property="rating" column="rating"/>
    <result property="info" column="info"/>
    <result property="sInfo" column="s_info"/>
</resultMap>

<!-- 주문내역 조회 -->
<select id="selectOrdersByShopId"
        parameterType="int"
        resultType="com.projectbob.domain.Orders">
  SELECT
    o_no         AS oNo,
    s_id         AS sId,
    id           AS id,
    total_price  AS totalPrice,
    payment      AS payment,
    o_address    AS oAddress,
    request      AS request,
    reg_date     AS regDate,
    modi_date    AS modiDate,
    status       AS status,
    quantity     AS quantity,
    menus        AS menus,
    payment_uid  AS paymentUid
  FROM orders
  WHERE s_id = #{sId}
  ORDER BY reg_date DESC
</select>

<!-- 상태별 & 가게별 주문 리스트 조회 -->
<select id="selectOrdersByStatusAndShop" parameterType="map" resultType="com.projectbob.domain.Orders">
  SELECT * FROM orders WHERE status=#{status} AND s_id=#{sId} ORDER BY reg_date DESC
</select>

<!-- 단일 주문 상세 조회 -->
<select id="selectOrderByNo" parameterType="int" resultType="com.projectbob.domain.Orders">
  SELECT * FROM orders WHERE o_no = #{oNo}
</select>
  
<!-- 주문 상태 변경 -->
<update id="updateOrderStatus" parameterType="map">
  UPDATE orders SET status = #{status}, modi_date = SYSDATE() WHERE o_no = #{oNo}
</update>

<!-- 조회 매핑 (select) -->
  <select id="findOrdersByStatusAndRegDate" resultType="com.projectbob.domain.Orders"
          parameterType="map">
    SELECT *
      FROM orders
     WHERE status    = #{status}
       AND reg_date &lt;  #{cutoff}
     ORDER BY reg_date DESC
  </select>

  <!-- 변경 매핑 (update) -->
  <update id="updateStatusByStatusAndRegDate" parameterType="map">
    UPDATE orders
       SET status    = #{newStatus},
           modi_date = SYSDATE()
     WHERE status    = #{oldStatus}
       AND reg_date &lt; #{cutoff}
  </update>

<!-- 주문정보 전달 -->
<insert id="insertOrder" parameterType="com.projectbob.domain.Orders"
        useGeneratedKeys="true" keyProperty="oNo" keyColumn="o_no">
  INSERT INTO orders
    (s_id, id, total_price, payment,
     o_address, request,
     reg_date, modi_date,
     status, quantity, menus, payment_uid)
  VALUES
    (#{sId}, #{id}, #{totalPrice}, #{payment},
     #{oAddress}, #{request},
     SYSDATE(), SYSDATE(),
     #{status}, #{quantity}, #{menus}, #{paymentUid})
</insert>

<!-- 상태별 & 오너별 "신규 주문" 알림 목록 -->
<select id="findOrdersByOwnerAndStatus"
        parameterType="map"
        resultType="com.projectbob.domain.Orders">
  SELECT *
    FROM orders
   WHERE id = #{ownerId}
     AND status = #{status}
   ORDER BY reg_date DESC
</select>

<!-- 헤더알림 주문으로 이동 -->
<select id="findNewOrdersByOwnerId" parameterType="string" resultType="com.projectbob.domain.Orders">
  SELECT *
  FROM orders o
  JOIN shop s ON o.s_id = s.s_id
  WHERE s.owner = #{ownerId}
    AND o.status = 'NEW'
  ORDER BY o.reg_date DESC
</select>

</mapper>	
