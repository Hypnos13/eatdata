<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.projectbob.mapper.BobMapper">

<!-- 대댓글 개수 조회 -->
<select id="countReviewReply" parameterType="int" resultType="int">
	SELECT COUNT(*) FROM review_reply WHERE r_no = #{rNo}
</select>

<!-- 대댓글 삭제 -->
<delete id="deleteReviewReply" parameterType="int">
	DELETE FROM review_reply WHERE rr_no = #{rrNo}
</delete>

<!-- 대댓글 수정 -->
<update id="updateReviewReply" parameterType="ReviewReply">
	UPDATE review_reply SET content = #{content}, modi_date = SYSDATE()
	WHERE rr_no = #{rrNo}
</update>

<!-- 대댓글 추가 -->
<insert id="addReviewReply" parameterType="ReviewReply">
	INSERT INTO review_reply(r_no, s_id, id, content, status)
	VALUES(#{rNo}, #{sId}, #{id}, #{content}, #{status})
</insert>

<!-- 대댓글 -->
<select id="reviewreplyList" parameterType="int" resultType="ReviewReply">
	SELECT * FROM review_reply WHERE r_no = #{rNo}
</select>

<!-- 댓글 대댓글 연결 -->
<resultMap id="reviewReplyResultMap" type="com.projectbob.domain.ReviewReply">
    <id property="rrNo" column="rr_no"/>
    <result property="rNo" column="r_no"/>
    <result property="sId" column="s_id"/>
    <result property="id" column="id"/>
    <result property="content" column="content"/>
    <result property="regDate" column="reg_date"/>
    <result property="modiDate" column="modi_date"/>
    <result property="status" column="status"/>
</resultMap>

<!-- 가게 전체 대댓글 가져오기 -->
<select id="getReviewReplyList" resultMap="reviewReplyResultMap">
	SELECT * FROM review_reply WHERE s_id = #{sId}
</select>

<!-- 댓글 삭제 -->
<delete id="deleteReview">
	DELETE FROM review WHERE r_no = #{rNo}
</delete>

<!-- 댓글 수정 -->
<update id="updateReview" parameterType="Review">
	UPDATE review SET content = #{content}, rating = #{rating}, r_picture = #{rPicture},
														m_id = #{mId},  modi_date = SYSDATE()
	WHERE r_no = #{rNo}
</update>

<!-- 댓글 추가 맵핑 구문 -->
<insert id="addReview" parameterType="Review">
	INSERT INTO review(id, s_id, m_id, content, rating, r_picture, liked, status, reg_date, modi_date)
	VALUES(#{id}, #{sId}, #{mId}, #{content}, #{rating}, #{rPicture}, #{liked}, #{status}, SYSDATE(), SYSDATE())
</insert>

<!-- 찜 추가 시 shop.heart + 1 -->
<update id="incrementHeart" parameterType="int">
	UPDATE shop SET heart = heart + 1 WHERE s_id = #{sId}
</update>
<update id="decrementHeart" parameterType="int">
	UPDATE shop SET heart = GREATEST(heart -1, 0) WHERE s_id = #{sId}
</update>

<!-- 찜목록 버튼 -->
<select id="isLiked" parameterType="LikeList" resultType="int">
	SELECT COUNT(*) FROM likeList
	WHERE id = #{id} AND s_id = #{sId}
</select>
<insert id="addLikeList" parameterType="LikeList">
	INSERT INTO likeList(id, s_id, status, reg_date)
	VALUES(#{id}, #{sId}, 'Y', NOW())
</insert>
<delete id="deleteLikeList" parameterType="LikeList">
	DELETE FROM likeList WHERE id = #{id} AND s_id = #{sId}
</delete>
<select id="shopCountLike" parameterType="int" resultType="int">
	SELECT COUNT(*) FROM likeList WHERE s_id = #{sId}	
</select>

<!-- 하트 버튼 증가시키는 쿼리 -->
<!-- <update id="plusHeart" parameterType="int">
	UPDATE shop SET heart = heart + 1 WHERE s_id = #{sId}
</update> -->
<select id="getHeartCount" parameterType="int" resultType="int">
	SELECT heart FROM shop WHERE s_id = #{sId}
</select>

<!-- 댓글 대댓글 연결 -->
<resultMap id="reviewResultMap" type="com.projectbob.domain.Review">
    <id property="rNo" column="r_no"/>
    <result property="id" column="id"/>
    <result property="sId" column="s_id"/> 
    <result property="mId" column="m_id"/>
    <result property="content" column="content"/>
    <result property="rating" column="rating"/>
    <result property="rPicture" column="r_picture"/>
    <result property="liked" column="liked"/>
    <result property="regDate" column="reg_date"/>
    <result property="modiDate" column="modi_date"/>
    <result property="status" column="status"/>
    <result property="menuName" column="menuName"/>
</resultMap>

<!-- 리뷰 -->
<select id="getReviewList" parameterType="int" resultMap="reviewResultMap">
	SELECT review.r_no, review.id, review.s_id, review.m_id, review.content, review.rating,
		review.r_picture, review.liked, review.reg_date, review.modi_date, review.status, 
	menu.name AS menuName FROM review
	JOIN menu ON review.m_id = menu.m_id 
	WHERE review.s_id = #{sId} ORDER BY review.r_no DESC
</select>

<!-- 가게 상세 페이지에 필요한 xml -->
<select id="getMenuListByShopId" resultType="com.projectbob.domain.Menu">
	SELECT
	*
	FROM menu
	WHERE s_id = #{sId} ORDER BY m_id ASC
</select>

<!-- 모달창 메뉴옵션에 필요한 xml -->
<select id="getMenuOptionsByMenuId" resultType="com.projectbob.domain.MenuOption">
	SELECT
	*
	FROM menu_Option
	WHERE m_id = #{mId} ORDER BY price
</select>
<select id="getMenuCategoriesByShopId" resultType="java.lang.String">
	SELECT DISTINCT category FROM menu
	WHERE s_id = #{s_id} ORDER BY category
</select>
<!-- getMenuCategoriesByShopId는 주문표에 필요한 xml -->

<!-- 가게 리스트에서 가게 버튼 누를때 -->
<select id="getShopDetail" resultType="com.projectbob.domain.Shop">
	SELECT
	*
	FROM shop
	WHERE s_id = #{s_id}
</select>

<!-- 메인에서 버튼 누를때 -->
<select id="shopList" resultType="com.projectbob.domain.Shop" parameterType="map">
	SELECT	*	FROM shop
		where 1=1
		<if test="category != null and category != '전체보기'">
			AND category = #{category}
		</if>
		<if test="keyword != null and keyword != ''">
			AND name like concat('%', #{keyword} ,'%')
		</if>
	
	ORDER BY s_id DESC
</select>



</mapper>