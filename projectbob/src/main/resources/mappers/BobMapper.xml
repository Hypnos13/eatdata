<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.projectbob.mapper.BobMapper">

<!--  나중에 제거할지도... 아래부분 부터.. -->
 
  <!-- Cart insert : caId 자동생성 -->
    <insert id="insertCart" parameterType="com.projectbob.domain.Cart" useGeneratedKeys="true" keyProperty="caId">
        INSERT INTO cart (id, m_id, s_id, quantity, reg_date)
        VALUES (#{id}, #{mId}, #{sId}, #{quantity}, NOW())
    </insert>

    <!-- CartOption insert -->
    <insert id="insertCartOption">
        INSERT INTO cart_option (ca_id, mo_id)
        VALUES (#{cartId}, #{moId})
    </insert>

    <!-- 특정 유저 장바구니 리스트 조회 -->
    <select id="selectCartListByUser" parameterType="string" resultType="com.projectbob.domain.Cart">
        SELECT *
        FROM cart
        WHERE id = #{id}
        ORDER BY reg_date DESC
    </select>
 
 
<!--  나중에 제거할지도... 윗부분.. -->


<!-- 주문표 모두 불러오기 -->
<select id="getCart" resultType="com.projectbob.domain.Cart">
select ca_id, m_id, mo_id, id, s_id, quantity, total_price, reg_date, modi_date
 from cart
  where id= #{id}
</select>

<!-- 주문표 메뉴 등록 -->
<insert id="insertCart" parameterType="Cart">
INSERT INTO cart (m_id, mo_id, id, s_id, quantity, total_price)
  VALUES (#{mId}, #{moId}, #{id}, #{sId}, #{quantity}, #{totalPrice})
</insert>

<!-- 주문표 수량 수정 -->
<update id="countUpdateCart" parameterType="Cart">
 UPDATE cart
  SET quantity = #{quantity},
      total_price = #{totalPrice},
      modi_date = CURRENT_TIMESTAMP
  WHERE ca_id = #{caId}
   AND id = #{id}
</update>

<!-- 주문표 메뉴 삭제 -->
<delete id="deleteMenu" parameterType="Cart">
  DELETE FROM cart
  WHERE ca_id = #{caId}
    AND id = #{id}
</delete>

<!-- 주문 전체 삭제 -->
<delete id="deleteAllCart" parameterType="com.projectbob.domain.Cart">
  DELETE FROM cart
  WHERE id = #{id}
</delete>

<!-- 댓글 추가 맵핑 구문 -->
<insert id="addReview" parameterType="Review">
	INSERT INTO review(id, s_id, m_id, content, rating, r_picture, liked, status)
	VALUES(#{id}, #{sId}, #{mId}, #{content}, #{rating}, #{rPicture}, #{liked}, #{status})
</insert>

<!-- 하트 버튼 증가시키는 쿼리 -->
<update id="plusHeart" parameterType="int">
	UPDATE shop SET heart = heart + 1 WHERE s_id = #{sId}
</update>
<select id="getHeartCount" parameterType="int" resultType="int">
	SELECT heart FROM shop WHERE s_id = #{sId}
</select>

<!-- 리뷰 -->
<select id="reviewList" parameterType="int" resultType="com.projectbob.domain.Review">
	SELECT review.*, menu.name AS menuName FROM review
	JOIN menu ON review.m_id = menu.m_id 
	WHERE review.s_id = #{sId} ORDER BY review.r_no DESC
</select>

<!-- 가게 상세 페이지에 필요한 xml -->
<select id="getMenuListByShopId" resultType="com.projectbob.domain.Menu">
	SELECT
	*
	FROM menu
	WHERE s_id = #{sId} ORDER BY m_id ASC
</select>

<!-- 모달창 메뉴옵션에 필요한 xml -->
<select id="getMenuOptionsByMenuId" resultType="com.projectbob.domain.MenuOption">
	SELECT
	*
	FROM menu_option
	WHERE m_id = #{mId} ORDER BY price
</select>
<select id="getMenuCategoriesByShopId" resultType="java.lang.String">
	SELECT DISTINCT category FROM menu
	WHERE s_id = #{s_id} ORDER BY category
</select>
<!-- getMenuCategoriesByShopId는 주문표에 필요한 xml -->

<!-- 가게 리스트에서 가게 버튼 누를때 -->
<select id="getShopDetail" resultType="com.projectbob.domain.Shop">
	SELECT
	*
	FROM shop
	WHERE s_id = #{s_id}
</select>

<!-- 메인에서 버튼 누를때 -->
<select id="shopList" resultType="com.projectbob.domain.Shop" parameterType="map">
	SELECT	*	FROM shop
		where 1=1
		<if test="category != null and category != '전체보기'">
			AND category = #{category}
		</if>
		<if test="keyword != null and keyword != ''">
			AND name like concat('%', #{keyword} ,'%')
		</if>
	
	ORDER BY s_id DESC
</select>


</mapper>